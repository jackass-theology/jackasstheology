window.tdbVue.load={template:'<div class="tdb-modal-body">\n                    <div class="tdb-load tdb-template">\n                        \x3c!-- header --\x3e\n                        <div class="tdb-header-wrap">    \n                            <div class="tdb-header">                            \n                                <span class="tdb-title">Pre-designed Templates - tagDiv Cloud Library</span>\n                                <button @click.prevent="closeModal" class="td-icon-close-mobile tdb-close"></button>\n                            </div>                                                               \n                        </div>\n                        \n                        \x3c!-- errors --\x3e\n                        <error \n                            v-if="$parent.errors" \n                            :errorsToDisplay="$parent.errors"\n                        ></error>\n                           \n                        <template v-else>\n                            \x3c!-- sort bar --\x3e                \n                            <div class="tdb-sort-bar">\n                                <input id="tdb-search" title="Search" type="text" placeholder="Search templates by keyword ( e.g. \'footer\' )" v-model="$parent.search">\n                                <div id="tdb-template-type">\n                                        <div class="tdb-category-wrap">                               \n                                            <span v-for="(templateType, typeIndex) in $parent.template_types" @click.prevent="selectTemplateType( templateType )" :class="{\'tdb-category-name\':true, \'tdb-sort-selected\': isTemplateTypeSelected( templateType ) }"><span class="tdb-sort-cat">{{templateType.template_type_name}}</span><span class="tdb-sort-counter">({{templateType.count}})</span></span>\n                                        </div>\n                                        <div id="tdb-sort-by">\n                                            <div class="tdb-sort-title">Sort by: </div>\n                                            <span v-for="(sortOption, sortIndex) in $parent.sort_by_options" @click.prevent="setSortBy(sortOption)" :class="{\'tdb-sort-selected\': $parent.sort_by === sortOption}">{{showSortOption(sortOption)}}</span>\n                                        </div>                                \n                                    </div>                      \n                            </div>\n                            \n                            \x3c!-- content --\x3e                    \n                            <div class="tdb-load-content" @scroll="onScroll" ref="loadContent">                                                                                 \n                                <div v-for="(template, index) in $parent.sorted_templates" :class="{\'tdb-template-wrap\': true, \'td-lazy-image-loaded\': template.img_is_loaded === true}" :data-id="template.ID" :key="template.ID" style="min-height: 255px;">\n                                    <div class="tdb-template-image-wrap">\n                                        <div class="tdb-template-msg">\n                                            <span v-if="template.are_images_uploaded == \'0\'" class="tdb-template-incomplete">Incomplete</span>                                        \n                                            <span v-if="template.is_public == \'0\'" class="tdb-template-offline">Offline</span>\n                                        </div>\n                                        <router-link :to="{ name: \'singleRoute\', params: {templateId: template.ID, templateType: template.template_type_name, wpType: template.wp_type_name}}" class="tdb-template-details">\n                                            <img v-if="template.img_is_loaded === true" class="td-lazy-image" :src="template.small_image_url" />\n                                            <img v-else class="td-lazy-image-placeholder" :data-src="template.small_image_url" :src="pluginUrl + \'/assets/images/loading-cloud.gif\'" />                                                                                                                                     \n                                        </router-link>\n                                        \x3c!--<span class="tdb-template-type">{{template.type_name}}</span>--\x3e\n                                        <a v-if="template.preview_url && template.are_images_uploaded === \'1\'" class="tdb-template-link tdb-template-preview" :href="template.preview_url" target="_blank" :data-edit_url="template.edit_url">Live preview</a>\n                                        \x3c!-- extra links --\x3e                                \n                                        <router-link v-for="(link, linkIndex) in extraLinks" :class="getLinkClass( link.params )" :key="linkIndex" :to="{ name: link.routeName, params: getParams(template, link.params)}" v-if="template.are_images_uploaded === \'1\' || link.routeName === \'deleteRoute\'">{{link.buttonText}}</router-link>\n                                    </div>\n                                    <div class="tdb-template-title">{{template.title}}<span class="tdb-template-author"> by <a target="_blank" :href="template.author_url">{{template.author}}</a></span></div>             \n                                </div>\n                            </div>               \n                        </template>                                                                                     \n                    </div>\n               </div>',
props:{search:{type:String,required:!1},templateType:{type:String,required:!1}},data:function(){return{extraLinks:[],pluginUrl:tdbPluginUrl,template_type_name:void 0}},created:function(){var a=this;this.$parent.getTemplates({wp_type:a.$parent.tdb_template_type,callback:function(){"undefined"!==typeof a.templateType&&(a.$parent.template_type_name=a.templateType)}}).constructor!==Array&&(a.$parent.sorted_templates=[]);"undefined"!==typeof this.search&&(this.$parent.search=this.search);"undefined"!==
typeof window.tdbVue.extraLinks&&window.tdbVue.extraLinks.constructor===Array&&(a.extraLinks=window.tdbVue.extraLinks);eventHub.$on("sorted-templates-changed",this.onTemplatesUpdate)},mounted:function(){this.$refs.loadContent.scrollTop=this.$parent.scroll_position;window.addEventListener("resize",this.onWindowResize)},methods:{getParams:function(a,b){var c={};"undefined"!==typeof b&&b.constructor===Array&&0<b.length&&b.forEach(function(b){"string"===typeof b.name&&"undefined"!==typeof a[b.data]&&
(c[b.name]=a[b.data])});return c},setSortBy:function(a){a!==this.sort_by&&(this.$parent.sort_by=a,this.$parent.scroll_position=0,this.$refs.loadContent.scrollTop=0)},getLinkClass:function(a){return"tdb-template-link "+a[0]["class"]},closeModal:function(){this.$parent.resetSortOptions();this.$router.push({name:"indexRoute"})},showSortOption:function(a){return"az"===a?"A-Z":a.charAt(0).toUpperCase()+a.slice(1)},onScroll:function(a){this.$parent.scroll_position=a.target.scrollTop;this.checkImagesPosition()},
onTemplatesUpdate:function(){var a=this;a.$nextTick(function(){a.checkImagesPosition()})},onWindowResize:function(){this.checkImagesPosition()},checkImagesPosition:function(){var a=this;a.$refs.loadContent.querySelectorAll(".tdb-template-wrap").forEach(function(b){!0!==b.classList.contains("td-lazy-image-loaded")&&a.isElementInViewport(b)&&a.templateInView(b.dataset.id)})},isElementInViewport:function(a){a=a.getBoundingClientRect();var b=a.left,c=a.bottom,d=a.right,f=a.height,e=a.width,g=this.$refs.loadContent;
return 0<=a.top+f&&0<=b+e&&c-f<=g.clientHeight+300&&d-e<=g.clientWidth+300},templateInView:function(a){var b=this.$parent.sorted_templates.findIndex(function(b){return parseInt(b.ID)===parseInt(a)});this.$parent.sorted_templates[b].img_is_loaded=!0},isTemplateTypeSelected:function(a){return this.$parent.template_type_name===a.template_type_name},selectTemplateType:function(a){this.template_type_name=this.$parent.template_type_name=a.template_type_name;window.tdbVue.router.push({name:"loadRoute",params:{wp_type:window.tdcPostSettings.tdbTemplateType,
templateType:a.template_type_name}})}},components:{error:window.tdbVue.error},beforeDestroy:function(){window.removeEventListener("resize",this.onWindowResize);eventHub.$off("sorted-templates-changed",this.onTemplatesUpdate)},watch:{templateType:function(){this.$parent.template_type_name=this.templateType}}};
window.tdbVue.routes=[{path:"/",component:window.tdbVue.index,name:"indexRoute",children:[{path:"load/:templateType?",component:window.tdbVue.load,name:"loadRoute",props:!0},{path:"single/:wpType/:templateType/:templateId",component:window.tdbVue.single,name:"singleRoute",props:!0},{path:"install/:templateId",component:window.tdbVue.install,name:"installRoute",props:!0}]}];
(function(){if("undefined"!==typeof window.tdbVue.extraRoutes){var a=window.tdbVue.extraRoutes;a.constructor===Array&&0<a.length&&a.forEach(function(a,c,d){if("string"===typeof a.path&&"string"===typeof a.name){c={path:a.path,name:a.name};if("string"===typeof a.component)c.component=window.tdbVue[a.component];else if("object"===typeof a.components){d={};for(var b in a.components)d[b]=window.tdbVue[a.components[b]];c.components=d}if("boolean"===typeof a.props)c.props=a.props;else if("object"===typeof a.props){b=
{};for(var e in a.props)b[e]=a.props[e];c.props=b}window.tdbVue.routes[0].children.push(c)}})}window.tdbVue.routes.push({path:"*",redirect:{name:"indexRoute"}})})();window.tdbVue.router=new VueRouter({routes:window.tdbVue.routes});window.tdbVue.router.beforeEach(function(a,b,c){jQuery("body").removeClass("tdb_templates_open");var d=[];window.tdbVue.routes[0].children.forEach(function(a){d.push(a.name)});-1!==d.indexOf(a.name)&&jQuery("body").addClass("tdb_templates_open");c()});(function(){jQuery("body.post-type-tdb_templates .page-title-action").show()})();
